#!/bin/sh

DOTFILES_ROOT="`pwd`"

set -e

echo ''

info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

setup_gitconfig () {
  if ! [ -f .gitconfig ]
  then
    info 'Setup gitconfig'

    user ' - What is your github author name?'
    read -e git_authorname
    user ' - What is your github author email?'
    read -e git_authoremail

    sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" .gitconfig.example > .gitconfig

    success 'gitconfig'
  fi
}

link_files () {
  ln -fs $1 $2
  success "linked $1 to $2"
}

install_dotfiles () {
  info 'installing dotfiles'

  pattern='^\.[a-z]{2,}'

  for f in $DOTFILES_ROOT/.*; do
    file=`basename $f`
    if [[ "${file}" =~ $pattern ]]; then
      if [[ -f $HOME/$file || -d $HOME/$file ]]; then
        mkdir -p $HOME/$backup
    	info 'Backing up $file'
        cp -R $HOME/$file $HOME/$backup/$file
      fi
      if [[ "$file" != ".gitmodules" && "$file" != ".git" && "$file" != ".gitignore" && "$file" != ".global_gitignore" && "$file" != ".gitconfig.example" ]]; then # ignoring git internals
        link_files $DOTFILES_ROOT/$file $HOME/$file
      fi
    fi
  done
}

setup_gitconfig
install_dotfiles

echo ''
echo '  All installed!'
echo ''
